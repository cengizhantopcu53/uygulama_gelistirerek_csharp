<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAwrGhLtDGuY7Fu6xlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMm6q2fSxbiNv7SoLNzSxMby6+H/7ufd/ci6q30AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMe7roTv593+8uvh/9zRxMTe1cno8uvh//Lr4f/r49n3xbmobQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMS5qXHr49n58uvh//Lr4f/g1svm3dPH5PLr4f/y6+H/8uvh/+ri1vXUy7+Pyr2vacq9
        r2nKva9pyr2vadXKvZDq4tf28uvh//Lr4f/y6+H/3tXJ4eDWytPy6+H/8uvh/+nh1v/c0cT/7+fb//Lr
        4f/y6+H/8uvh//Lr4f/17+f/+/j1//Pt5P/y6+H/8uvh/97UydDb08W68uvh//Lr4f/Xyrz/1MGw/9zR
        xP/y6+H/8uvh//Lr4f/07+f/8fXu/8DYuP/9+/r/8+3j//Lr4f/e1cm81su9pvLr4f/Mva//z8C0/9fK
        vP/Nvq//0sS1//Lr4f/17+f/9evi//Pq4f/c6dj/1tb2/+7t9//z7eT/1su+oc/EtIXy6+H/v6yb/8y9
        r//y6+H/xbWk/8W1pP/y6+H/+PPu/+7WxP/u1sX//////7Ky8P/X1/b/9fDo/8i6roG7r51T8Onf//Lr
        4f/Ux7n/ybal/9zRxf/y6+H/8uvh//Lr4f/69/P/6fH0/5LF1///////9/Pt//Dp3/+2qZlQgICABODW
        ydvy6+H/39PG/9LDtP/m3NH/8uvh//Lr4f/y6+H/8uvh//n28//u9Pb/9/Pt//Lr4f/d1cjagICABAAA
        AADHu61t7+fd/fLr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8+3k//Lr4f/w6N/+xrysbwAA
        AAAAAAAAAAAAAMG2pHvNwrSa0MO2icS3pWO6rZ1Ouq2dTnhrX4a6rZ1OxLelY9DDtonNwrSaxruqbAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNQDd0QEBACAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUUM2E05BN2ZOQTZ2TkA3b0xB
        N0oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABMQDZoVUBADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAT0M3Kk8+NR0AAAAAAAAAAL/9AAAf8AAAD/AAAAPAAAAAAAAAAAAAAAAAAAAAAAAAgAEAAIAB
        AADAAwAA52cAAP//AAD//wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACSkm0HmYh3HqqqVQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqqpVA5mI
        dx6Skm0HAAAAAAAAAACZmWYFs6aUrM3Bs+Xd1Mj6yLyu2LWmlnIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALWm
        lXjIvK7Z3dTI+s3AtOS0pZWqmZlmBbKikYfs5Nn+8uvh//Lr4f/y6+H/5NvP9bCgkYQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACxo5GN5NzQ9vLr4f/y6+H/8uvh/+zk2f2voY+CxrqsxfLr4f/y6+H/8uvh//Lr4f/y6+H/39XJ8K+i
        j3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAsaKSfOHXyvby6+H/8uvh//Lr4f/y6+H/8uvh/8W6q8PKvbHa8uvh//Lr4f/y6+H/8uvh//Lr
        4f/y6+H/2c/B6K+cjFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAK+jkVbZz8Lr8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/yr6w2cq+sN7y6+H/8uvh//Lr
        4f/y6+H/8uvh//Lr4f/y6+H/zsO13K6ejj8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACtno9E0Ma43/Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/LvrLdx7ut2fLr
        4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/0MW44LOjkmyqqlUDAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACqqlUDs6WUbtPJvODy6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh/8q+
        sNjGuKrV8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/5N3R+ca6q9u+sqLJvrKiyb6y
        osm+sqLJvrKiyb6yosm+sqLJvrKiyca5rNzl3tL58uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr
        4f/y6+H/xbmq0MS3qcry6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr
        4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Ps4v/49e//9vHq//Lr4f/y6+H/8uvh//Lr
        4f/y6+H/8uvh//Lr4f/CtabFxLmpuvLr4f/y6+H/8uvh//Lr4f/y6+H/8uvh/9DDtv/HuKr/x7iq/+HY
        zP/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+L/+/n2////////////9vLr//Lr
        4f/y6+H/8uvh//Lr4f/y6+H/8uvh/72yobm9sqKv8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/wK6d/9TB
        sP/UwbD/x7iq//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvi//v59v/6/Pn/uM6s/9Hf
        yv//////9vLr//Lr4f/y6+H/8uvh//Lr4f/y6+H/uaudrrmrmpry6+H/8uvh//Lr4f/y6+H/8uvh//Lr
        4f/Arp3/1MGw/9TBsP/HuKr/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4v/7+fb//////8nZ
        wf+12bD/p8Wb////////////9vLr//Lr4f/y6+H/8uvh//Lr4f+5q5qasKSSgfHq4P/y6+H/8uvh/9/U
        yP/f1Mj/39TI/7yrm//Arp3/wK6d/8m7rf/f1Mj/39TI/+fd0//y6+H/8uvh//Lr4f/y6+L/+/n2////
        ////////8fbv/6zGn/+/07X/////////////////9vLr//Lr4f/y6+H/8Onf/7KjlIWpmodT59/T//Lr
        4f/y6+H/s6CO/8eyof+7p5X/39TI//Lr4f/y6+H/v6+f/8eyof/HsqH/v6+f//Lr4f/y6+H/8uvh//v6
        9//+/Pz/2bKV/9mylf/+/Pz////////////T0/P/hYXi/7u77f//////9/Lr//Lr4f/m3dH+pZWDUpmP
        ehnVyb3q8uvh//Lr4f+7qZj/1MGw/8eyof/f1Mj/8uvh//Lr4f/Ds6P/1MGw/9TBsP/Ds6P/8uvh//Lr
        4f/07uX///////Tr5P/ep33/3qh9//Ts5f///////////5SU4/+Ojvf/iIjk///////8+vf/8uvh/9XK
        vuqdiXYaAAAAAMi8rcvy6+H/8uvh/6uYh/+7qZj/s6CO/9/UyP/y6+H/8uvh/72snv+7qZj/u6mY/72s
        nv/y6+H/8uvh//Lr4f/59vL//////+DCrP/gwqz/////////////////6en5/5OT4//U1PP//v79//Xv
        5//y6+H/x7uszQAAAAAAAAAAvrCgrPLr4f/y6+H/8uvh//Lr4f/y6+H/tKKR/7upmP+7qZj/x7ms//Lr
        4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/69/P////////////d6O7/g7jM/5O7zf////////////7+
        /v/18On/8uvh//Lr4f+8rp+qAAAAAAAAAACvoZF/7OPZ//Lr4f/y6+H/8uvh//Lr4f/Arp3/1MGw/9TB
        sP/HuKr/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/69/P//////73U3v+Q1ej/grbK////
        ///+/v7/9fDp//Lr4f/y6+H/7ufc/6+gj3kAAAAAAAAAAJeLdBbQxLbq8uvh//Lr4f/y6+H/8uvh/7mn
        lv/HsqH/x7Kh/8e4qv/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/69/P//v7//8PY
        4f/f6u///v7+//Xw6f/y6+H/8uvh//Lr4f/NwrTgm5B6FwAAAAAAAAAAAAAAALermbzy6+D/8uvh//Lr
        4f/y6+H/4tnO/9/UyP/f1Mj/6uLX//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr
        4f/69/P///////7+/v/18On/8uvh//Lr4f/y6+H/8uvh/7iqnLEAAAAAAAAAAAAAAAAAAAAAraCPO9bN
        we7y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr
        4f/y6+H/8uvh//Lr4f/28er/9O7l//Lr4f/y6+H/8uvh//Lr4f/Z0MPrqZyKOwAAAAAAAAAAAAAAAAAA
        AAAAAAAAtaiXm+rh1vzy6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr
        4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/6+TZ/bSmlZUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACAgIACtqiXls7CtOXe1cny2tHF7dHHuOfGu6zVv7OkvL6xopm1pJSGrqGQha6h
        kIWuoZCFcGRXv66hkIWuoZCFtaSUhr6xopm/s6S8xrqs1tHHuOfa0cXt3tXJ8s7DteCzpZaUgICAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqoCABp6PeCKej3gim5B6FwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABNPzXNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn4p1GJ6PeCKej3giqoCABgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAE1AN7ZQQjMjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATUI3Rk0/Nr1NQDMUAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATkE1Uk1ANtBNPzbBTkA2rk1A
        NpxNQDaITEA2aE5FOxoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBA
        MBBQQDggSkA1MExBNUNNQDd0TUA3101BNT8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABORTsaTUA20IAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNQDacTkA2NAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE5ANXNOPzZVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAST0xFU1A
        MxQAAAAAAAAAAAAAAAAAAAAAAAAAAP////+H///hAf//gAH//4AA//8AAH/+AAA//AAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACAAAABgAAAAYAAAAGAAAABwAAAA8AAAAPAAAAD4AAAB+AAAAfwAAAP//9/////
        f////7/////B/////3////+/////v///////////
</value>
  </data>
</root>